#!/bin/bash

set -e

_usage() {
	echo "Could not find config file."
	echo "Usage: $0 [/path/to/openwrt.conf]"
	exit 1
}

source_directory="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

[[ -z "$config_file" ]] && config_file=$1
[[ -z "$config_file" ]] && config_file="$source_directory/image.build.config"
source $config_file 2>/dev/null || { _usage; exit 1; }

if [[ "$BUILDER_RELEASE" == "snapshots" ]];
then
    dl_name="openwrt-imagebuilder-$BUILDER_TARGET.Linux-x86_64"
    dl_file="$dl_name.tar.xz"
    dl_path="snapshots/targets/${BUILDER_TARGET/-//}"
else
    dl_name="openwrt-imagebuilder-$BUILDER_RELEASE-$BUILDER_TARGET.Linux-x86_64"
    dl_file="$dl_name.tar.xz"
    dl_path="releases/$BUILDER_RELEASE/targets/${BUILDER_TARGET/-//}"
fi
[[ -z "$BUILDER_URL" ]] && BUILDER_URL="https://downloads.openwrt.org/$dl_path/$dl_file"
[[ -z "$BUILDER_FILE" ]] && BUILDER_FILE="$HOME/.openwrt/$dl_file"
[[ -z "$BUILDER_NAME" ]] && BUILDER_NAME="$dl_name"
[[ -z "$BUILDER_PATH" ]] && BUILDER_PATH="$source_directory"
[[ -z "$BUILDER_ID" ]] && BUILDER_ID="$( echo $RANDOM | md5sum | head -c 20 )"

if [[ ! -d "$BUILDER_PATH/$BUILDER_NAME" ]];
then
    if [[ ! -f "$BUILDER_FILE" ]];
    then
        mkdir -p "$HOME/.openwrt"

        echo "download $BUILDER_URL"
        curl -o $BUILDER_FILE $BUILDER_URL
    fi
    mkdir -p "$BUILDER_PATH"
    xz -fdk $BUILDER_FILE
    tar -xf ${BUILDER_FILE/tar.xz/tar} -C "$BUILDER_PATH"
fi

BUILDER_DIR="$BUILDER_PATH/$BUILDER_NAME"
cd $BUILDER_DIR

# make info
make info

if [[ ! -f "$BUILDER_DIR/.config.original" ]];
then
    # backup config
    cp "$BUILDER_DIR/.config" "$BUILDER_DIR/.config.original"
fi
read -r -a envs_config <<< "$( echo "${!BUILDER_CONFIG_*}" )"
if [[ -n "${envs_config[@]}" ]];
then
    if [[ -f "$BUILDER_DIR/.config.original" ]];
    then
        # restore config
        cp "$BUILDER_DIR/.config.original" "$BUILDER_DIR/.config"
    fi

    echo ""
    echo "# auto generated by seed" >> "$BUILDER_DIR/.config"

    for env_name in "${envs_config[@]}";
    do
        config_key="${env_name/BUILDER_CONFIG_/}"
        config_value="${!env_name}"
        echo "Config Replace: $config_key=$config_value"
        sed -i "s|^ *$config_key|# &|" "$BUILDER_DIR/.config"
        echo "$config_key=$config_value" >> "$BUILDER_DIR/.config"
    done
fi

BUILDER_COMMAND=(make image)
read -r -a envs_option <<< "$( echo "${!BUILDER_OPTION_*}" )"
for env_name in "${envs_option[@]}";
do
    option_key="${env_name/BUILDER_OPTION_/}"
    option_value="${!env_name}"
    option_value="${option_value//$'\n'/}"

    BUILDER_COMMAND+=("$option_key=$option_value")
done

echo ""
# make image
"${BUILDER_COMMAND[@]}"

# copy output
if [[ -n "$BUILDER_OUTPUT_PATH" && -n "$BUILDER_OUTPUT_DEST" ]];
then
    mkdir -p $BUILDER_OUTPUT_DEST
    if [[ "$BUILDER_OUTPUT_PATH" =~ \/$ ]];
    then
        cp -r $BUILDER_DIR/$BUILDER_OUTPUT_PATH. $BUILDER_OUTPUT_DEST
    else
        cp -r $BUILDER_DIR/$BUILDER_OUTPUT_PATH $BUILDER_OUTPUT_DEST
    fi
fi
