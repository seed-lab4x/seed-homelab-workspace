#!/usr/bin/env -S ansible-playbook -i ${PWD}/ansible-inventories
# code: language=ansible
---

- name: deploy
  hosts: docker
  tasks:

    - name: fact workspace
      include_tasks: "{{ workspace.local }}/.seed/ansible-tasks/seed-workspace.fact.yml"

    - name: fact workpath
      include_tasks: "{{ workspace.local }}/{{ workspace.seedpath }}/ansible-tasks/seed-workpath.fact.yml"

    - when: cloudflared.token is defined
      block:
      - name: deploy compose
        include_tasks: "{{ workspace.local }}/{{ workspace.seedpath }}/ansible-tasks/seed-docker/docker-compose.deploy.yml"
        vars:
          compose:
            name: cloudflared
            vars: "{{ cloudflared | default({},true) }}"
            default:
              envs:
                - file: external_env-all.env
                  content: ''
              composes:
                - file: docker-compose.yml
                  template: "{{ playbook_dir }}/docker-compose.yml.j2"
                  vars:
                    COMMAND: "tunnel --no-autoupdate run --token {{ cloudflared.token }}"

    - when: cloudflared.config is defined
      block:
      - name: fact param
        ansible.builtin.set_fact:
          _config: "{{ cloudflared.config }}"

      - name: stat config
        delegate_to: localhost
        connection: local
        ansible.builtin.stat:
          path: "{{ _config.dir }}/config.yml"
        register: config_src_stat

      - when: not config_src_stat.stat.exists
        include_tasks: "{{ playbook_dir }}/config/ansible-tasks.build.yml"

      - name: deploy compose
        include_tasks: "{{ workspace.local }}/{{ workspace.seedpath }}/ansible-tasks/seed-docker/docker-compose.deploy.yml"
        vars:
          compose:
            name: cloudflared
            vars: "{{ cloudflared | default({},true) }}"
            default:
              files:
                - src: "{{ _config.dir }}/"
                  dest: "{{ workpath.remote.full }}/config/"
              volumes:
                - name: external_vol-cloudflared-data
                  driver: local
                  push:
                    - src: "{{ workpath.remote.full }}/config/"
                      dest: ""
              envs:
                - file: external_env-all.env
                  content: ''
              composes:
                - file: docker-compose.yml
                  template: "{{ playbook_dir }}/docker-compose.yml.j2"
                  vars:
                    COMMAND: "tunnel --config /home/nonroot/.cloudflared/config.yml run"
