#!/usr/bin/env -S ansible-playbook -K -i ${PWD}/ansible-inventories
# code: language=ansible
---

- name: support
  hosts: dsm
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ env_path | default('') }}"
  tasks:

    - name: slurp dsm hw version
      ansible.builtin.slurp:
        src: /proc/sys/kernel/syno_hw_version
      register: dsm_hw_version_slurp

    - name: get dsm major version
      ansible.builtin.shell: get_key_value /etc/VERSION majorversion || true
      register: dsm_major_version_get
      failed_when: dsm_major_version_get.stdout != '7'

    - block:
      # same as 'sudo nvme id-ctrl /dev/nvme0n1'
      - name: slurp nvme model
        vars:
          name: "{{ item | replace('/dev/','') }}"
        loop: "{{ nvme.pool.part }}"
        ansible.builtin.slurp:
          src: "/sys/block/{{ name }}/device/model"
        register: nvme_model_slurp

      - name: slurp nvme firmware
        vars:
          name: "{{ item | replace('/dev/','') }}"
        loop: "{{ nvme.pool.part }}"
        ansible.builtin.slurp:
          src: "/sys/block/{{ name }}/device/firmware_rev"
        register: nvme_firmware_slurp

      - name: fact nvme info
        vars:
          dict_model: "{{ nvme_model_slurp.results | community.general.json_query('[].{key:item,value:{model:content}}') | items2dict }}"
          dict_firmware: "{{ nvme_firmware_slurp.results | community.general.json_query('[].{key:item,value:{firmware:content}}') | items2dict }}"
          dict_info: "{{ dict_model | combine(dict_firmware | default({},true), recursive=True) }}"
          list: "{{ _nvme_info | default([],true) }}"
          append:
            dev: "{{ item.key }}"
            model: "{{ item.value.model | b64decode | replace('\n$','') | trim }}"
            firmware: "{{ item.value.firmware | b64decode | replace('\n$','') | trim }}"
        loop: "{{ dict_info | dict2items }}"
        ansible.builtin.set_fact:
          _nvme_info: "{{ list + [append] }}"

    - vars:
        db_files:
          - "/var/lib/disk-compatibility/{{ dsm_hw_version_slurp.content | b64decode | replace('\n','') | trim | lower }}_host_v{{ dsm_major_version_get.stdout }}.db"
          - "/var/lib/disk-compatibility/{{ dsm_hw_version_slurp.content | b64decode | replace('\n','') | trim | lower }}_host_v{{ dsm_major_version_get.stdout }}.db.new"
      loop: "{{ db_files }}"
      loop_control:
        loop_var: db_file
      include_tasks: ansible-tasks.support.yml
      
    - name: print note
      ansible.builtin.pause:
        seconds: 1
        prompt: |
          !!!!!
          This is a dangerous operation, check the log output to make sure the settings are correct.
          Then reboot system
          !!!!!
